name: Server CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'server/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'server/**'

defaults:
  run:
    working-directory: server

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ '17' ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java-version }}
          cache: 'maven'
      - name: Build with Maven
        run: ./mvnw clean install -B
      - name: Run tests
        run: ./mvnw test -B
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ github.sha }}
          path: server/target/surefire-reports/
          retention-days: 7
  deployment-check:
    name: Deployment Readiness
    runs-on: ubuntu-latest
    needs: [build-and-test]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: test-results-${{ github.sha }}
          path: server/target/surefire-reports/
      - name: Check for JAR artifact
        run: |
          echo "Checking for JAR artifact..."
          if [ ! -f "target/*.jar" ]; then
            echo "JAR file not found in build output"
            exit 1
          fi
          echo "JAR file found. Ready for deployment." 